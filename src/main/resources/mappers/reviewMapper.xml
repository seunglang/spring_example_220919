<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.example.lesson03.dao.ReviewDAO">
 	<select id="selectReview" parameterType="int" resultType="com.example.lesson03.model.Review">
 		SELECT
 			`id`
			,`storeId`
			,`menu`
			,`userName`
			,`point`
			,`review`
			,`createdAt`
			,`updatedAt`
		FROM
			`new_review`
		WHERE
			`id` = #{id}
 	</select>
 	
 	<!-- <seclet> 이런식으로 select 내부에 id값만 바꿔주면 xml 파일을 한개로 유지하면서 사용할 수 있다.
 	 	insert에서는 resultType이 없다.
 	 </seclet>-->
 	 
 	 <insert id="insertReview" parameterType="com.example.lesson03.model.Review">
 	 	INSERT INTO `new_review`
 	 	(
			 `storeId`
			,`menu`
			,`userName`
			,`point`
			,`review`
			,`createdAt`
			,`updatedAt`
 	 	)
 	 	VALUES
 	 	(
 	 		#{storeId}
 	 		, #{menu}
 	 		, #{userName}
 	 		, #{point}
 	 		, #{review}
 	 		, NOW()
 	 		, NOW()
 	 	)
 	 </insert>
 	 
 	 <insert id="insertReviewAsField" parameterType="map">
 	 	INSERT INTO `new_review`
 	 	(
			 `storeId`
			,`menu`
			,`userName`
			,`point`
			,`review`
			,`createdAt`
			,`updatedAt`
 	 	)
 	 	VALUES
 	 	(
 	 		#{storeId}
 	 		, #{menu}
 	 		, #{userName}
 	 		, #{point}
 	 		, #{review}
 	 		, NOW()
 	 		, NOW()
 	 	)
 	 </insert>
 	 
 	 <update id="updateReviewById" parameterType="map">
 	 	UPDATE `new_review`
 	 	SET
 	 		`review` = #{review} <!-- 중괄호 안에 있는 review는 DAO에 @Param명과 일치해야 한다. -->
 	 		, `updatedAt` = NOW()
 	 	WHERE
 	 		`id` = #{id}
 	 </update>
 	 
 	 <delete id="deleteReviewById" parameterType="int">
 	 	DELETE
 	 	FROM
 	 		`new_review`
 	 	WHERE
 	 		`id` = #{id}
 	 </delete>
 </mapper>